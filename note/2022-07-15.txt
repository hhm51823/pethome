
后太获取是当前登录用户
    1，准备工具类，公私钥的文件名称值我们是放在yml中的，之前是通过注入的方式获取值，但是此处工具类并没有被spring管理，
    我们就不能使用注入的方式，那么我们可以通过监听器，监听spring容器启动后，手动获取值
    2，准备承载公私钥文件名称值的对象
        定义一个枚举类
    3，准备监听器，容器一启动完毕就读取公私钥文件名称值，存入到提前准备好的承载类中
    4，通过枚举类调用即可

宠物模块需求分析
    宠物来源：
        1，门店自己的宠物
        2，用户宠物寻主，即：售卖

    宠物相关表分析：
        1，宠物表
            宠物的基本信息
        2，宠物类型表
            宠物的类型
        3，宠物的详情表
            宠物的简介和预约须知
        4，宠物上下架的审核表
            上架前提前审核宠物图片，名称，使用百度AI审核

    基础代码生成即可

富文本编辑器：vue-quill-edit
    安装
    - npm install quill --save
    - npm install vue-quill-editor

    使用：
        在页面引入
        import {quillEditor} from "vue-quill-editor"; //调用编辑器
        import 'quill/dist/quill.core.css';
        import 'quill/dist/quill.snow.css';
        import 'quill/dist/quill.bubble.css';
        // 富文本框整合FastDfs
        import quillConfig from '../../common/js/quill-config.js'


    宠物类型做无限极树：
        前端：
            引入组件。
            钩子函数中获取宠物类型树数据
        后端：
            编写接口，获得宠物类型树数据

        回显：
            在前段将dirPath转换为如：[2,3]的数值格式赋值给无限极组件绑定的模型层的属性

    上架宠物时，我们肯会存储宠物的图片，并且此处我们是需要存储多张宠物图片，但是后端宠物资源只有一个字段，
        那么如何使用一个字段存储多张图片，我们采取的方案是在多张图片之间使用逗号隔开
           1，修改资源上传路径为后端接口路径
           2，修改删除图片调用路径
           3，上传成功时，将多张图片路径使用逗号隔开进行拼接复制给资源字段
           4，删除图片时，更新资源字段值


    宠物增删改：
        前端传递的参数对应后端的两个表
        增删改宠物的时候，将宠物详情表同步更新

        新增时需要先获取当前登录用户的店铺id保存到宠物信息中


    宠物上下架：
        这是一个批量操作。商家的时候需要使用百度AI审核名称和图片是否合规

        下架：
            前端返回选择的id集合

            后端根据id集合执行批量修改即可

        商家：
            前端返回选中的集合对象

            后端：
                1，创建宠物审核日志对象集合，创建保存正常上架的ids集合
                2，循环宠物集合
                3，过滤掉已上架的宠物
                4，百度AI审核名字
                    不通过则拼接名字不通过的日志
                5，百度AI循环审核图片集合
                     不通过则拼接图片不通过的日志
                6，初始化日志表的其他信息并保存到宠物审核日志对象集合中
                7，将合规的id保存到ids集合中
                8，批量添加宠物审核日志对象
                9，批量修改ids集合的状态